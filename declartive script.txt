
Declarative pipeline code
============================

pipeline
{
    agent any
    stages
    {
        stage('ContinuousDownload')
        {
            steps
            {
                git 'https://github.com/intelliqittrainings/maven.git'
            }
        }
        stage('ContinuousBuild')
        {
            steps
            {
              sh 'mvn package'
            }
        }
        stage('ContinuousDeployment')
        {
            steps
            {
                deploy adapters: [tomcat9(credentialsId: '51ce93b4-eb13-4c25-8908-1c8bdb04428b', path: '', url: 'http://172.31.25.255:8080')], contextPath: 'qaapp', war: '**/*.war'
            }
        }
        
        stage('ContinuousTesting')
        {
            steps
            {
              git 'https://github.com/intelliqittrainings/FunctionalTesting.git'
              sh 'java -jar /home/ubuntu/.jenkins/workspace/Declarativepipeline/testing.jar'( first exute the above git repo and identify the location and made next step)
            }                                              ( job name)
        }
        
        stage('ContinuousDelivery')
        {
            steps
            {
              deploy adapters: [tomcat9(credentialsId: '51ce93b4-eb13-4c25-8908-1c8bdb04428b', path: '', url: 'http://172.31.21.238:8080')], contextPath: 'prodapp', war: '**/*.war'
            }
        }
    }
}